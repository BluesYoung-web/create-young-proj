{
  "list-add-admin": {
    "prefix": "list-add",
    "body": [
      "<route lang=\"yaml\">",
      "meta:",
      "  title: $1",
      "  authPath: $2",
      "</route>",
      "",
      "<script lang=\"ts\" setup>",
      "import { useFormMode, YoungDialog, YoungPagination, YoungTable, YoungSelect } from '@bluesyoung/ui-vue3-element-plus';",
      "import type { TableHeadItem, TableDataItem, SelectOptionItem } from '@bluesyoung/ui-vue3-element-plus';",
      "import { deepClone } from '@bluesyoung/utils';",
      "import { $3 } from '@/typings';",
      "import { apis } from '@/modules/3-net';",
      "",
      "interface Form extends $3 {};",
      "const FORM_TEMP: Form = {};",
      "const {",
      "  isAdd,",
      "  isEdit,",
      "  edit,",
      "  del,",
      "  sure,",
      "  clear,",
      "  form,",
      "  formRef,",
      "  validForm",
      "} = useFormMode<Form>(FORM_TEMP, {",
      "  addCbk: async () => {",
      "    const res = await validForm() as boolean;",
      "    if (res) {",
      "      const v = deepClone(form.value);",
      "      // await apis.post.addUserItem(v);",
      "      ElMessage.success('新增成功！');",
      "    }",
      "    return res;",
      "  },",
      "  modCbk: async () => {",
      "    const res = await validForm() as boolean;",
      "    if (res) {",
      "      const v = deepClone(form.value);",
      "      // await apis.patch.changeUserItem(v);",
      "      ElMessage.success('修改成功！');",
      "    }",
      "    return res;",
      "  },",
      "  delCbk: async (row) => {",
      "    // await apis.delete.deleteUser(row.id.toString());",
      "    ElMessage.success('删除成功！');",
      "    query.pageNum = 1;",
      "  },",
      "  cgEffect: () => getList()",
      "});",
      "const tableHead: TableHeadItem<Form>[] = [",
      "  { prop: '', label: '' },",
      "];",
      "interface Query extends BaseQuery {};",
      "const query = reactive<Query>({",
      "  pageNum: 1,",
      "  pageSize: 50,",
      "  total: 0,",
      "});",
      "",
      "const tableData = ref<TableDataItem<Form>[]>([]);",
      "const getList = async () => {",
      "  // const { list, pageNum, pageSize, total } = await apis.get.getUserList(query);",
      "  // tableData.value = deepClone(list || []);",
      "  // query.pageNum = +pageNum || 1;",
      "  // query.pageSize = +pageSize || 50;",
      "  // query.total = +total || 0;",
      "};",
      "",
      "getList();",
      "</script>",
      "",
      "<template>",
      "  <div class=\"flex\">",
      "    <div class=\"m-2\">",
      "      <ElInput v-model=\"query.\" placeholder=\"请输入\" />",
      "    </div>",
      "    <div class=\"m-2\">",
      "      <ElButton type=\"primary\" @click=\"getList\">搜索</ElButton>",
      "    </div>",
      "    <div class=\"m-2\">",
      "      <ElButton type=\"success\" @click=\"isAdd = true\">添加</ElButton>",
      "    </div>",
      "  </div>",
      "  <div class=\"m-2\">",
      "    <YoungTable :table-data=\"tableData\" :table-head=\"tableHead\" :table-height=\"680\" />",
      "    <YoungPagination v-show=\"query.total > 0\" v-model:page=\"query.pageNum\" v-model:limit=\"query.pageSize\"",
      "      :total=\"query.total\" @page-change=\"getList\" />",
      "  </div>",
      "  <YoungDialog :is-add=\"isAdd\" :is-edit=\"isEdit\" width=\"520px\" @sure=\"sure\" @clear=\"clear\">",
      "    <template #body>",
      "      <ElForm ref=\"formRef\" :model=\"form\" label-width=\"100px\">",
      "        <ElFormItem label=\"\" prop=\"\">",
      "          <ElInput v-model=\"form.\" class=\"!w-300px\" />",
      "        </ElFormItem>",
      "      </ElForm>",
      "    </template>",
      "  </YoungDialog>",
      "</template>",
    ],
    "description": "list-add-admin"
  }
}